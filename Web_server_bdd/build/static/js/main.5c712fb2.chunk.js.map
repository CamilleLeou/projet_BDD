{"version":3,"sources":["Components/Appbar.js","Components/Typography/TitleInput.js","Components/Inputs/DatePicker.js","Components/Inputs/TextInput.js","Components/Button.js","Components/Inputs/Chooser.js","context.js","Components/MainGrid.js","Components/Forms/AddUser.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","title","button","marginLeft","buttonIcon","marginRight","SimpleAppBar","classes","react_default","a","createElement","className","AppBar","position","color","Toolbar","Typography","variant","Button","PlusOne_default","Search_default","width","maxWidth","TitleInput","_ref","data","gutterBottom","theme","TextInput","name","label","_React$useState","React","useState","_React$useState2","Object","slicedToArray","values","setValues","TextField","id","textField","value","onChange","event","objectSpread","defineProperty","target","margin","background","border","borderRadius","boxShadow","height","marginTop","padding","Hook","display","flexWrap","formControl","spacing","minWidth","selectEmpty","ProductContext","createContext","Component","Consumer","textAlign","paper","palette","text","secondary","AddUser","Paper","autoComplete","FormControl","App","Fragment","material_ui_pickers_esm","utils","DateFnsUtils","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c712fb2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Plus_one from \"@material-ui/icons/PlusOne\";\r\nimport Search from \"@material-ui/icons/Search\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  button: {\r\n    marginLeft: 25\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 4\r\n  },\r\n});\r\n\r\nexport default function SimpleAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\">\r\n            PostgreSQL Console\r\n          </Typography>\r\n          <Button className={classes.button} color=\"inherit\">\r\n            <Plus_one className={classes.buttonIcon}/>\r\n            Fill DB\r\n          </Button>\r\n          \r\n          <Button className={classes.buttonIcon} color=\"inherit\">\r\n          <Search className={classes.buttonIcon}/>\r\n            Query DB\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 500\r\n  }\r\n});\r\n\r\nexport default function TitleInput({ data }) {\r\n\r\n  return (\r\n    <Typography variant=\"h5\" gutterBottom>\r\n      {data}\r\n    </Typography>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}));\r\n\r\nexport default function DatePicker({ label }) {\r\n  const classes = useStyles();\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(\r\n    new Date(\"2014-08-19T21:11:54\")\r\n  );\r\n\r\n  function handleDateChange(date) {\r\n    setSelectedDate(date);\r\n  }\r\n\r\n  return (\r\n    <KeyboardDatePicker\r\n      margin=\"normal\"\r\n      id=\"mui-pickers-date\"\r\n      label={label}\r\n      value={selectedDate}\r\n      onChange={handleDateChange}\r\n      KeyboardButtonProps={{\r\n        \"aria-label\": \"change date\"\r\n      }}\r\n    />\r\n  );\r\n}","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n  }));\r\n\r\nexport default function TextInput({label}) {\r\n    const classes = useStyles();\r\n\r\n    const [values, setValues] = React.useState({\r\n        name: \"Cat in the Hat\"\r\n    });\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, [name]: event.target.value });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                id=\"standard-name\"\r\n                label={label}\r\n                className={classes.textField}\r\n                value={values.name}\r\n                onChange={handleChange(\"name\")}\r\n                margin=\"normal\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    height: 48,\r\n    marginTop: 25,\r\n    padding: '0 30px',\r\n  },\r\n});\r\n\r\nexport default function Hook({label}) {\r\n  const classes = useStyles();\r\n  return <Button className={classes.root}>{label}</Button>;\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function SimpleSelect() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: '',\r\n        name: 'hai',\r\n    });\r\n\r\n    function handleChange(event) {\r\n        setValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    return (\r\n        //   <form className={classes.root} autoComplete=\"off\">\r\n        //     <FormControl className={classes.formControl}>\r\n        <React.Fragment>\r\n            <InputLabel htmlFor=\"age-simple\">Age</InputLabel>\r\n        <Select\r\n            value={values.age}\r\n            onChange={handleChange}\r\n            inputProps={{\r\n                name: 'age',\r\n                id: 'age-simple',\r\n            }}\r\n        >\r\n            <MenuItem value={10}>Ten</MenuItem>\r\n            <MenuItem value={20}>Twenty</MenuItem>\r\n            <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n        </React.Fragment>\r\n        \r\n          //  </FormControl>\r\n        //</form>\r\n    )\r\n}","import React, { Component } from \"react\";\r\nconst ProductContext = React.createContext();\r\n\r\n\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    users: [],\r\n    campaigns: [],\r\n    prospect_list: [],\r\n    prospects: []\r\n  };\r\n\r\n  componentDidMount(){\r\n      this.setUsers();\r\n  }\r\n\r\n  setUsers = () => {\r\n    // Ici un call api react qui va bien\r\n    let tempUsers = \"select * from dba_prj01.Prospect\";\r\n    ;\r\n\r\n    this.setState(() => {\r\n        return {users:tempUsers};\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n        }}\r\n      >\r\n        {this.props.children};\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductProvider, ProductConsumer };","import React from \"react\";\r\nimport { Formik } from 'formik';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TitleInput from \"./Typography/TitleInput\";\r\nimport DatePicker from './Inputs/DatePicker';\r\nimport TextInput from './Inputs/TextInput';\r\nimport Button from './Button';\r\nimport Chooser from './Inputs/Chooser';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport {ProductConsumer} from '../context'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    textAlign: \"center\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 190\r\n  },\r\n  paper: {\r\n    margin: 20,\r\n    padding: theme.spacing(2),\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={6} sm={5} md={3}>\r\n          <Paper className={classes.paper}>\r\n            \r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={5} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <TitleInput data=\"Add campaign\" />\r\n            <form className={classes.root} autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <Chooser />\r\n                <TextInput label=\"Name\" />\r\n                <DatePicker label=\"Beggining date\" />\r\n                <DatePicker label=\"Ending date\" />\r\n                <TextInput label=\"Name\" />\r\n                <TextInput label=\"Name\" />\r\n                <Button label=\"ADD\" />\r\n              </FormControl>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={5} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <TitleInput data=\"Add prospect list\" />\r\n            <form className={classes.root} autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <Chooser />\r\n                <TextInput label=\"Name\" />\r\n                <Button label=\"ADD\" />\r\n              </FormControl>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={6} sm={5} md={3}>\r\n          <Paper className={classes.paper}>\r\n            <TitleInput data=\"Add prospect\" />\r\n            <form className={classes.root} autoComplete=\"off\">\r\n              <FormControl className={classes.formControl}>\r\n                <Chooser />\r\n                <TextInput label=\"Name\" />\r\n                <TextInput label=\"Name\" />\r\n                <TextInput label=\"Name\" />\r\n                <TextInput label=\"Name\" />\r\n                <Button label=\"ADD\" />\r\n              </FormControl>\r\n            </form>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div >\r\n  );\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TitleInput from \"../Typography/TitleInput\";\r\nimport TextInput from '../Inputs/TextInput';\r\nimport Button from '../Button';\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 190\r\n    },\r\n    paper: {\r\n        margin: 20,\r\n        padding: theme.spacing(2),\r\n        color: theme.palette.text.secondary\r\n    }\r\n}));\r\n\r\nexport default function AddUser() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <TitleInput data=\"Add user\" />\r\n            <form className={classes.root} autoComplete=\"off\">\r\n                <FormControl className={classes.formControl}>\r\n                    <TextInput label=\"Name\" />\r\n                    <Button label=\"ADD\" />\r\n                </FormControl>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Appbar from \"./Components/Appbar\";\r\nimport MainGrid from \"./Components/MainGrid\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\n\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport AddUser from \"./Components/Forms/AddUser\";\r\n\r\nfunction App() {\r\n  return (\r\n      <React.Fragment>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <Appbar />\r\n          <AddUser/>\r\n        </MuiPickersUtilsProvider>\r\n      </React.Fragment>\r\n \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}